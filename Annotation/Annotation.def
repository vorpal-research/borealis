// lets put in some macro magic!!!

#if !defined(HANDLE_ANNOTATION) && !defined(HANDLE_ANNOTATION_WITH_BASE)
#define INCLUDE_MODE
#elif !defined(HANDLE_ANNOTATION) && defined(HANDLE_ANNOTATION_WITH_BASE)
#define HANDLE_ANNOTATION(CMD, CLASS) HANDLE_ANNOTATION_WITH_BASE(CMD, Annotation, CLASS)
#elif defined(HANDLE_ANNOTATION) && !defined(HANDLE_ANNOTATION_WITH_BASE)
#define HANDLE_ANNOTATION_WITH_BASE(CMD, BASE, CLASS) HANDLE_ANNOTATION(CMD, CLASS)
#endif

#ifdef INCLUDE_MODE
#undef INCLUDE_MODE

#include "Annotation/RequiresAnnotation.h"
#include "Annotation/EnsuresAnnotation.h"
#include "Annotation/AssignsAnnotation.h"
#include "Annotation/AssertAnnotation.h"
#include "Annotation/AssumeAnnotation.h"
#include "Annotation/SkipAnnotation.h"
#include "Annotation/IgnoreAnnotation.h"
#include "Annotation/StackDepthAnnotation.h"
#include "Annotation/UnrollAnnotation.h"
#include "Annotation/MaskAnnotation.h"
#include "Annotation/EndMaskAnnotation.h"

#define HANDLE_ANNOTATION(CMD, CLASS)
#define HANDLE_ANNOTATION_WITH_BASE(CMD, BASE, CLASS)

#endif // INCLUDE_MODE

HANDLE_ANNOTATION_WITH_BASE("requires", LogicAnnotation, RequiresAnnotation)
HANDLE_ANNOTATION_WITH_BASE("ensures", LogicAnnotation, EnsuresAnnotation)
HANDLE_ANNOTATION_WITH_BASE("assigns", LogicAnnotation, AssignsAnnotation)
HANDLE_ANNOTATION_WITH_BASE("assert", LogicAnnotation, AssertAnnotation)
HANDLE_ANNOTATION_WITH_BASE("assume", LogicAnnotation, AssumeAnnotation)
HANDLE_ANNOTATION("skip", SkipAnnotation)
HANDLE_ANNOTATION("ignore", IgnoreAnnotation)
HANDLE_ANNOTATION("stack-depth", StackDepthAnnotation)
HANDLE_ANNOTATION("unroll", UnrollAnnotation)
HANDLE_ANNOTATION("mask", MaskAnnotation)
HANDLE_ANNOTATION("endmask", EndMaskAnnotation)



#undef HANDLE_ANNOTATION
#undef HANDLE_ANNOTATION_WITH_BASE
