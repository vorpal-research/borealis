/*
 * Type/Bool.h
 * This file is generated from the following haskell datatype representation:
 * 
 * data Type = Integer | Bool | Float | UnknownType | Pointer { pointed :: Type } | TypeError { message :: String } deriving (Show, Eq, Data, Typeable)
 * 
 * stored in Type/Type.datatype
 * using the template file Type/derived.h.hst
 * 
 * DO NOT EDIT THIS FILE DIRECTLY
 */

#ifndef BOOL_H
#define BOOL_H

#include "Type/Type.h"


namespace borealis {

class TypeFactory;

namespace type {

/** protobuf -> Type/Bool.proto
import "Type/Type.proto";

package borealis.type.proto;

message Bool {
    extend borealis.proto.Type {
        optional Bool ext = 1;
    }
}

**/
class Bool : public Type {

    typedef Bool Self;
    typedef Type Base;

    Bool(): Type(class_tag(*this)) {}

public:
    friend class ::borealis::TypeFactory;
    
    static bool classof(const Self*) { return true; }
    static bool classof(const Base* b) { return b->getClassTag() == class_tag<Self>(); }

};

} // namespace type
} // namespace borealis

#endif // BOOL_H